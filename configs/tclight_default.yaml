sd_version: "iclight"  # Choices: ['2.1', '2.0', '1.5', 'depth', 'iclight']
model_key: null  # inherited from VidToMe
work_dir: "workdir/tclight"

data:
  scene_type: "video"
  # rgb_path: "path/to/your/video"
  height: 720       # Must be divisible by 8
  width: 960        # Must be divisible by 8
  fps: 25

# Not involved in TC-Light
inversion:
  save_path: "${work_dir}/latents"
  prompt: "xxxx"
  n_frames: null                  # Set to null to invert all frames
  steps: 25                       # Inversion steps
  save_intermediate: false       # Save intermediate latents (used with PnP)
  save_steps: 25
  use_blip: false                # Use prompt created by BLIP
  recon: false                   # Reconstruct video from latents
  control: "none"                # Choices: ['tile', 'softedge', 'depth', 'canny', 'none']
  control_scale: 1.0
  batch_size: 8
  force: false                   # Force inversion even if latents exist
  # float_precision: "fp32"      # Choices: ['fp16', 'fp32']

generation:
  control: "none"                # Control signal type, not involved in TC-Light.

  # Plug-and-Play (PnP) arguments
  pnp_attn_t: 0.5
  pnp_f_t: 0.8

  # ControlNet parameters
  control_scale: 1.0

  # Sample args:
  background_cond: false
  background_image_path: null
  guidance_scale: 2.0            # CFG scale
  n_timesteps: 25
  negative_prompt: >
    The video captures a game playing, with bad crappy graphics and cartoonish frames.
    It represents a recording of old outdated games. The lighting looks very fake.
    The textures are very raw and basic. The geometries are very primitive.
    The images are very pixelated and of poor CG quality. There are many subtitles
    in the footage. Overall, the video is unrealistic at all.
  prompt_upsampler_ckpt: null
  prompt: null
    # style: "xxx"
    # object: "xxx"
    # background: "xxx"

  latents_path: "${inversion.save_path}"
  output_path: "${work_dir}"

  chunk_size: 4                  # Number of frames in a video chunk
  chunk_ord: "mix-4"             # Options: ['seq', 'rand', 'mix-#']

  # VidToMe-specific arguments. See details in "utils/VidToMe/vidtome/patch.py, apply_patch()"
  local_merge_ratio: 0.6
  merge_global: true
  global_merge_ratio: 0.5
  global_rand: 0.5
  align_batch: true
  max_downsample: 2

  # Decayed multi-axis denoising arguments
  noise_mode: "same"
  alpha_t: 0.0                   # by default use no multi-axis denoising
  final_factor_t: 0.01           # decay factor for multi-axis denoising
  win_size_t: 64                 # temporal window size for temporal denoising
  prompt_t: "best quality"
  negative_prompt_t: "jittery"

  frame_range: [0, 30, 1]        # [start, end, interval]
  frame_ids: null                # Overrides frame_range if set
  save_frame: true

  # Not involved in TC-Light
  use_lora: false
  # lora:
  #   pretrained_model_name_or_path_or_dict: null
  #   lora_weight_name: null
  #   lora_adapter: null
  #   lora_weight: 1.0

post_opt:
  apply_opt: true
  epochs_exposure: 35
  epochs: 70
  batch_size: 16
  lambda_dssim: 0.2              # Increase to better match denoised result
  lambda_flow: 0.8               # Increase to enhance motion consistency
  lambda_tv: 0.05                # Increase to smooth adjacent pixels
  feature_lr: 0.05
  exposure_lr_init: 0.01
  exposure_lr_final: 0.001
  exposure_lr_delay_steps: 0
  exposure_lr_delay_mult: 0.0

seed: 12345
device: "cuda"
float_precision: "fp16"          # Choices: "fp16", "fp32"
enable_xformers_memory_efficient_attention: true
# base_config: "configs/default.yaml"
